name: Spring Linter
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize, reopened]
jobs:
  PMD:
    name: Forbidden Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available
      - name: Forbidden Code Linter Analyzer
        uses: pmd/pmd-github-action@v1
        id: pmd
        with:
          version: '6.40.0'
          rulesets: 'ruleset.xml'
      - name: Forbidden Code Linter Checker
        if: ${{ steps.pmd.outputs.violations != 0 }}
        run: exit 1

#  SonarCloud:
#    name: Sonar
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: 11
#          distribution: 'zulu' # Alternative distribution options are available
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Gradle packages
#        uses: actions/cache@v3
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
#          restore-keys: ${{ runner.os }}-gradle
#      - name: Build and analyze
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: ./gradlew -Dorg.gradle.jvmargs=-Xmx2024m build sonar --info